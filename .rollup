import vue from 'rollup-plugin-vue'
import commonjs from 'rollup-plugin-commonjs'
import resolve from 'rollup-plugin-node-resolve'
import postcss from 'rollup-plugin-postcss'
import babel from 'rollup-plugin-babel'
import buble from 'rollup-plugin-buble'
import minify from 'rollup-plugin-babel-minify'
import fs from 'fs'
 
 
let pkg=JSON.parse(fs.readFileSync('package.json', 'utf8'))

let optBabel={
      runtimeHelpers: true,
      //exclude: 'node_modules/**', //can not exclude node_modules, need compile wsemi
      presets: [
        [
          "@babel/preset-env",
          {
            useBuiltIns: 'entry', //entry usage, usage is not stable
            corejs: 3,
          }
        ]
      ],
    }


export default {
  input: 'src/WAgGridVue.vue',
  output: {
    banner: '/*!\n * wsemi v' + pkg.version + '\n * (c) 2018-2019 ' + pkg.author + '\n * Released under the MIT License.\n */',
    globals: { //指定哪些外部模組的名稱，左邊為內部模組名稱，右邊為外部提供模組名稱
      //'vue': 'vue',
      //'ag-grid-community': 'ag-grid-community',
      'ag-grid-vue': 'ag-grid-vue',
    },
    format: 'umd', //iife, umd
    name: 'w-aggrid-vue', //iife時名稱內不能使用「-」
    file: 'dist/w-aggrid-vue.umd.js',
    sourcemap: true
  },
  external: [ //指定哪些模組需視為外部模組
      //'vue',
      //'ag-grid-community',
      'ag-grid-vue',
  ], 
  plugins: [
    vue(),
    commonjs(),
    resolve({
        preferBuiltins: false,
        browser: true,
    }),
    babel(optBabel),
    //buble(),
    postcss({
      extensions: ['.css']
    }),
    minify({ comments: false, }),
  ]
}

